---
import DocsLayout from '../../../layouts/DocsLayout.astro'
import { findDoc, getAllDocs } from '../../../lib/docs'
import { TOC } from '../../../components/TOC'
import { Button } from '../../../components/ui/button'
// Generate all version/category paths for static generation
export async function getStaticPaths() {
  const pages = getAllDocs()
  return pages.map((p) => ({ params: { version: p.version, category: p.category } }))
}
// Extract route params (non-null asserted)
const version = Astro.params.version!;
const category = Astro.params.category!;
const page = findDoc(version, category)

if (!page) throw new Error('Doc not found')
// Get the Markdown component exported by the module
const { default: Content } = page.module

const base = import.meta.env.BASE_URL;
const all = getAllDocs()
// Build sidebar entries for this version (exclude the overview 'index')
let sidebar = all.filter((p) => p.version === page.version)
// Sort by frontmatter `order` (ascending), then by title for deterministic ordering
sidebar = sidebar.sort((a, b) => {
  const oa = typeof a.order === 'number' ? a.order : 999
  const ob = typeof b.order === 'number' ? b.order : 999
  if (oa !== ob) return oa - ob
  const ta = (a.title || a.category).toString()
  const tb = (b.title || b.category).toString()
  return ta.localeCompare(tb)
})
---

<DocsLayout title={page.title}>
  <div slot="sidebar">
    <div class="space-y-1">
      <div class="px-3 py-2 text-sm font-medium text-muted-foreground">
        Versi {page.version}
      </div>
      {sidebar.map(({ category: cat, title }) => {
        const isActive = cat === page.category
        return (
          <Button
            variant={isActive ? "default" : "ghost"}
            size="sm"
            asChild
            className="w-full justify-start h-9 px-3"
          >
            <a
              href={`${base}docs/${page.version}/${cat}`}
              class={`flex items-center gap-3 ${isActive ? 'text-primary font-semibold' : ''}`}
              aria-current={isActive ? 'page' : undefined}
            >
              <div class={`w-1 h-1 rounded-full ${isActive ? 'bg-primary-foreground' : 'bg-muted-foreground/40'}`}></div>
              {title}
            </a>
          </Button>
        )
      })}
    </div>
  </div>

  <div class="space-y-6">
    <!-- Page header -->
    <div class="space-y-3">
      <!-- <div class="flex items-center gap-2 text-sm text-muted-foreground">
        <span>Dokumentasi</span>
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
        <span>{page.version}</span>
      </div> -->
      <!-- <h1 class="text-3xl font-bold tracking-tight">{page.title}</h1> -->
    </div>

    <!-- Table of contents (if needed) -->
    <div class="lg:hidden">
      <TOC client:load />
    </div>

    <!-- Content -->
    <div class="prose prose-slate dark:prose-invert max-w-none">
      <Content />
    </div>

    <!-- Navigation -->
    <div class="flex justify-between items-center pt-8 border-t">
      <div class="text-sm text-muted-foreground">
        Terakhir diperbarui: {new Date().toLocaleDateString('id-ID')}
      </div>
      <Button variant="outline" size="sm" asChild>
        <a href={`${base}docs/${page.version}`}>
          ‚Üê Kembali ke overview
        </a>
      </Button>
    </div>
  </div>
</DocsLayout>
