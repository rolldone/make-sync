---
import type { DocPage } from '../lib/docs'
import { Card } from '../components/ui/card'
import { Button } from '../components/ui/button'
import '../styles/global.css'
import Header from '../components/ui/Header.astro'
import Footer from '../components/ui/Footer'
const { slots, props } = Astro
const base = import.meta.env.BASE_URL;
---

<html lang="id">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>{props.title ?? 'Docs'}</title>
    <!-- Apply stored theme early to avoid flash-of-unstyled (run before CSS paint) -->
    <script>
      (function(){
        try {
          var t = localStorage.getItem('makeSync:theme');
          if (t === 'dark') document.documentElement.classList.add('dark');
        } catch(e) { /* ignore */ }
      })();
    </script>
    <!-- Minimal inlined CSS variables as a fast fallback before full CSS loads -->
    <style>
      :root{ --background: #ffffff; --foreground: #0f172a }
      .dark{ --background: #0b1220; --foreground: #e6eef8 }
      /* apply to body early */
      html,body{ background-color: var(--background); color: var(--foreground); }
    </style>
  </head>
  <body class="bg-background text-foreground antialiased">
  <Header />
    <div class="min-h-screen">
      <div class="mx-auto max-w-7xl px-4 sm:px-6 py-4 sm:py-8">
        <div class="lg:flex lg:gap-8">
          <!-- Mobile sidebar toggle -->
          <button id="sidebar-toggle" class="lg:hidden mb-4 p-2 rounded-md border bg-card text-card-foreground flex items-center" aria-label="Toggle sidebar">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
            </svg>
            <span class="ml-2 text-sm">Menu</span>
          </button>
          
          <!-- Sidebar -->
          <aside id="sidebar" class="hidden lg:block lg:w-64 lg:shrink-0 lg:border-r lg:bg-card/50 lg:pr-6">
            <div class="lg:sticky lg:top-8">
              <div class="mb-6">
                <h2 class="text-lg font-semibold tracking-tight">Dokumentasi</h2>
                <p class="text-sm text-muted-foreground mt-1">API reference dan panduan</p>
              </div>
              
              <nav class="space-y-1">
                <slot name="sidebar" />
              </nav>
              
              <div class="mt-8 pt-6 border-t">
                <div class="flex items-center gap-2">
                  <Button variant="outline" size="sm" asChild className="w-full justify-start">
                    <a href={`${base}docs`} class="flex items-center gap-2">
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                      </svg>
                      Lihat semua versi
                    </a>
                  </Button>
                  <div class="ml-2">
                    <div id="theme-toggle-placeholder" />
                  </div>
                </div>
              </div>
            </div>
          </aside>

          <!-- Main content -->
          <main class="flex-1 min-w-0 lg:max-w-4xl">
              <!-- Breadcrumb -->
              <nav class="flex items-center text-sm text-muted-foreground mb-6">
                <a href={`${base}`} class="hover:text-foreground transition-colors">Home</a>
                <svg class="w-4 h-4 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
                <a href={`${base}docs`} class="hover:text-foreground transition-colors">Dokumentasi</a>
                <svg class="w-4 h-4 mx-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
                <span class="text-foreground font-medium">{props.title ?? 'Docs'}</span>
              </nav>

              <!-- Content -->
              <article class="prose prose-slate dark:prose-invert max-w-none prose-headings:scroll-mt-20 prose-headings:font-semibold prose-h1:text-3xl prose-h2:text-2xl prose-h3:text-xl prose-p:leading-7 prose-a:font-medium prose-a:no-underline hover:prose-a:underline prose-strong:font-semibold prose-code:font-mono prose-code:text-sm prose-pre:bg-slate-900 prose-pre:text-slate-100">
                <slot />
              </article>
            </div>
          </main>
        </div>
      </div>
    </div>
      <!-- Theme toggle + mobile menu client script -->
      <script type="module">
        (function() {
          const STORAGE_KEY = 'makeSync:theme';

          function applyTheme(theme) {
            const doc = document.documentElement;
            if (theme === 'dark') doc.classList.add('dark');
            else doc.classList.remove('dark');
          }

          function getStored() {
            try { return localStorage.getItem(STORAGE_KEY); } catch (e) { return null; }
          }

          function setStored(value) {
            try { localStorage.setItem(STORAGE_KEY, value); } catch (e) { /* ignore */ }
          }

          // Initialize state on load
          const stored = getStored();
          if (stored) applyTheme(stored);

          // Mount theme toggle buttons (desktop and mobile)
          function mountThemeToggle(mountPointId) {
            const mountPoint = document.getElementById(mountPointId);
            if (!mountPoint || mountPoint.dataset.mounted) return;
            
            mountPoint.dataset.mounted = '1';

            const btn = document.createElement('button');
            btn.type = 'button';
            btn.setAttribute('aria-label', 'Toggle color theme');
            btn.className = 'inline-flex items-center justify-center h-8 w-8 rounded-md border bg-transparent border-input text-sm hover:bg-muted';

            function updateButton() {
              const isDark = document.documentElement.classList.contains('dark');
              btn.textContent = isDark ? '🌙' : '☀️';
            }

            btn.addEventListener('click', () => {
              const isNowDark = !document.documentElement.classList.contains('dark');
              applyTheme(isNowDark ? 'dark' : 'light');
              setStored(isNowDark ? 'dark' : 'light');
              updateButton();
            });

            updateButton();
            mountPoint.appendChild(btn);
          }

          // Setup mobile menu toggle
          function setupMobileMenu() {
            const mobileMenuButton = document.getElementById('mobile-menu-button');
            const mobileMenu = document.getElementById('mobile-menu');
            
            if (mobileMenuButton && mobileMenu) {
              mobileMenuButton.addEventListener('click', () => {
                mobileMenu.classList.toggle('hidden');
              });
            }
          }

          // Setup sidebar toggle for mobile
          function setupSidebarToggle() {
            const sidebarToggle = document.getElementById('sidebar-toggle');
            const sidebar = document.getElementById('sidebar');
            
            if (sidebarToggle && sidebar) {
              sidebarToggle.addEventListener('click', () => {
                sidebar.classList.toggle('hidden');
                sidebar.classList.toggle('block');
              });
            }
          }

          // Initialize everything when DOM is ready
          function init() {
            mountThemeToggle('theme-toggle-placeholder');
            mountThemeToggle('theme-toggle-placeholder-mobile');
            setupMobileMenu();
            setupSidebarToggle();
          }

          if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', init);
          } else {
            init();
          }
        })();
      </script>
    <Footer />
  </body>
</html>
