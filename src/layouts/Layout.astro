---
import Header from '../components/ui/Header.astro'
import '../assets/styles.css'
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		
		<meta name="generator" content={Astro.generator} />
		<title>Astro Basics</title>
		<!-- Apply stored theme early to avoid flash-of-unstyled -->
		<script>
			(function(){
				try{ var t = localStorage.getItem('makeSync:theme'); if (t==='dark') document.documentElement.classList.add('dark'); } catch(e){}
			})();
		</script>
		<style>
			:root{ --background:#ffffff; --foreground:#0f172a }
			.dark{ --background:#0b1220; --foreground:#e6eef8 }
			html,body{ background-color:var(--background); color:var(--foreground); }
		</style>
	</head>
	<body>
		<Header />
		<main class="p-4 sm:p-6">
			<slot />
		</main>
		<!-- Theme toggle + mobile menu client script -->
		<script type="module">
			(function() {
			  const STORAGE_KEY = 'makeSync:theme';

			  function applyTheme(theme) {
			    const doc = document.documentElement;
			    if (theme === 'dark') doc.classList.add('dark');
			    else doc.classList.remove('dark');
			  }

			  function getStored() { try { return localStorage.getItem(STORAGE_KEY); } catch (e) { return null; } }
			  function setStored(value) { try { localStorage.setItem(STORAGE_KEY, value); } catch (e) { /* ignore */ } }

			  const stored = getStored(); if (stored) applyTheme(stored);

			  function mountThemeToggle(mountPointId) {
			    const mountPoint = document.getElementById(mountPointId);
			    if (!mountPoint || mountPoint.dataset.mounted) return;
			    mountPoint.dataset.mounted = '1';

			    const btn = document.createElement('button');
			    btn.type = 'button';
			    btn.setAttribute('aria-label', 'Toggle color theme');
			    btn.className = 'inline-flex items-center justify-center h-8 w-8 rounded-md border bg-transparent border-input text-sm hover:bg-muted';

			    function updateButton() { const isDark = document.documentElement.classList.contains('dark'); btn.textContent = isDark ? '🌙' : '☀️'; }

			    btn.addEventListener('click', () => {
			      const isNowDark = !document.documentElement.classList.contains('dark');
			      applyTheme(isNowDark ? 'dark' : 'light');
			      setStored(isNowDark ? 'dark' : 'light');
			      updateButton();
			    });

			    updateButton(); mountPoint.appendChild(btn);
			  }

			  function setupMobileMenu() {
			    const mobileMenuButton = document.getElementById('mobile-menu-button');
			    const mobileMenu = document.getElementById('mobile-menu');
			    
			    if (mobileMenuButton && mobileMenu) {
			      mobileMenuButton.addEventListener('click', () => {
			        mobileMenu.classList.toggle('hidden');
			      });
			    }
			  }

			  function init() {
			    mountThemeToggle('theme-toggle-placeholder');
			    mountThemeToggle('theme-toggle-placeholder-mobile');
			    setupMobileMenu();
			  }

			  if (document.readyState === 'loading') { document.addEventListener('DOMContentLoaded', init); } else { init(); }
			})();
		</script>
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>
